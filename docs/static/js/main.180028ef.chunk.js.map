{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACQ,sBAAMC,SARO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACrCN,EAAc,MAId,SACI,uBACAO,KAAK,OACLC,MAAUT,EACVU,SAhBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAeE,EAAEU,OAAOJ,a,+BCPnBK,EAAO,uCAAE,WAAQC,GAAR,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAWH,GAF/C,+DAGCI,MAAOF,GAHR,cAGZG,EAHY,gBAKKA,EAAKC,OALV,uBAKVC,EALU,EAKVA,KACFC,EAAQD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EACzB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVzB,kBAaZM,GAbY,4CAAF,sDCCPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAQV,EAAS,EAATA,IAInC,OACI,sBAAKc,UAAY,6DAAjB,UACG,qBAAKC,IAAOf,EAAMgB,IAAQN,IAC1B,4BAAKA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACtB,ECHwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNxB,EAASC,GACRwB,MAAM,SAAAd,GACCY,EAAS,CACLf,KAAMG,EACNU,SAAU,SAGxB,CAACpB,IACIqB,EDb4BI,CAAczB,GAAnCa,EAAd,EAAQN,KAAea,EAAvB,EAAuBA,QACvB,OACI,qCACI,mCAAOpB,KACLoB,GAAW,mBAAGJ,UAAW,wDAAd,sBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEezBe,EA5BM,WAEjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEQ4C,EAAWlB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEGA,SAAaA,GADNA,Y,MCdnC4B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.180028ef.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        console.log(e.target.value);\r\n        setInputValue( e.target.value );\r\n    }\r\n    const hanldeSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length>2 ){\r\n            setCategories( cats=>[inputValue, ...cats] );\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n    return (\r\n            <form onSubmit= { hanldeSubmit }>\r\n                <input\r\n                type=\"text\" \r\n                value = { inputValue }\r\n                onChange = { handleInputChange } \r\n                />\r\n            </form>\r\n \r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories :PropTypes.func.isRequired\r\n}\r\n\r\n// PrimeraApp.propTypes ={\r\n//     saludo  : PropTypes.string.isRequired,\r\n//     otra : PropTypes.number\r\n// }\r\n","export const getGifs =async ( category ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category ) }&limit=10&api_key=ZoFpcucLBIg7twINN4aIo2SZyPVKXPTN`;\r\n    const resp = await fetch( url );\r\n\r\n    const { data } = await resp.json();\r\n    const gifts = data.map( img=>{\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    })\r\n   return gifts;\r\n\r\n}","import React from 'react'\r\nexport const GifGridItem = ({  title , url}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__bounce animate__fadeInDown\">\r\n           <img src= { url } alt = { title }/>\r\n           <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React,{ useState,useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs  } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data: images,  loading } = useFetchGifs( category );\r\n    return (\r\n        <>\r\n            <h3> { category }</h3>\r\n            { loading && <p className= \"animate__animated animate__bounce animate__zoomInLeft\">Loading </p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem \r\n                            key = { img.id } \r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category )=>{\r\n\r\n    const [state, setState] = useState({\r\n        data :[],\r\n        loading : true \r\n    });\r\n    //UseEffect se usa para ejecutar funciones que  tengan dependencias ; Component dimout\r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then( img => {\r\n                setState({\r\n                    data :img,\r\n                    loading : false \r\n                })\r\n        });\r\n    },[category] );\r\n    return state;\r\n};","import React , {useState}  from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExpertApp = ()=>{\r\n    // const categories = ['One Punch','Samurai','Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = ()=>{\r\n    //     // setCategories([...categories,'Naruto']);\r\n    //     setCategories( cats=>[...cats,'Naruto']);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <ol>\r\n                {\r\n                    categories.map( category =>(\r\n                         <GifGrid \r\n                            key ={ category }\r\n                            category = { category }\r\n                         />\r\n                         )\r\n                    )\r\n                }\r\n            </ol>\r\n           \r\n        </>\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n"],"sourceRoot":""}